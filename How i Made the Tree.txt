# Tree Guide

Assuming that the tokens are ready andthat there is no syntax error.

let's Build The tree!!!1

the tree is a data structure that comprises of nodes;
unlike linked list the tree starts from a root node and contains 2 pointers called left and right.

the left and the right are the transferred to branches that can form a tree of itself called a subtree.


 the first thing i gotta do is look for any and/or operators in the list of tokens i have.

in my situation i have toswitch the state of my linked list to become a doubly linked list.

after that i have to start looking for an AND/OR tokens

now that i can find it using ft_token_search,
im supposed to take all the tokens after it and put them in the right node, and the tokens before them in the left node.

in order to do that i'll try joining them in an empty variable.


so the order is as follows :

find the first || or &&. Success

join all the tokens after it in a single <block>

never mind scratch that idea for now , the priority should be to re-lex the token list so that it identify everything as ablock;

a block is an entire command inculding redirections with the words coming after redirections considered as command arguments to the first arg
, that is until i reach one of the following : {&& ||  | }.



what was i thinking about again?

i was trying to turn all the tokens before a {| , && , ||} to a single block.

in order to do that i would need to store all tokens in a 2d array.
the problem is that i have no idea how to include just enter arguments and skip the redirection and the infile.
unless i loop over the linked list and store only the command with it's args , the i can just forget about redirections entirel,
because if they are to be used eventually the output would be depending on the number of
redirections available but more so on the last oe which would be created like the others and
filled with the output

ok so now i managed to make a function that creates one tree node extract redirections in the form of a linked list ,
as well as the command with its arguments.

i think i should look into tlinkiing the tree components
